name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

       # 2. Obtener la versión más alta desde Docker Hub
      - name: Determine Next Version on DockerHub
        id: get_version
        run: |
          REPO=${{ secrets.DOCKER_USERNAME }}/reydefrancia_nextsj
          
          # Obtener tags de Docker Hub
          response=$(curl -s https://hub.docker.com/v2/repositories/$REPO/tags/)
          tags=$(echo "$response" | jq -r '.results[] | select(.name | test("^v[0-9]+\\.[0-9]+$")) | .name' | sed 's/^v//')
          # Determinar la nueva versión
          if [ -z "$tags" ]; then
            NEW_VERSION="v1.0"
          else
            highest_version=$(echo "$tags" | sort -V | tail -n 1)
            MAJOR=$(echo "$highest_version" | cut -d. -f1)
            MINOR=$(echo "$highest_version" | cut -d. -f2)
            NEW_MINOR=$((MINOR + 1))
            NEW_VERSION="v${MAJOR}.${NEW_MINOR}"
          fi
          echo "next=$NEW_VERSION" >> $GITHUB_OUTPUT

      # 3. Log in a DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Construir y subir la imagen Docker a DockerHub
      - name: Build and Publish Docker Image
        run: |
          REPO=${{ secrets.DOCKER_USERNAME }}/reydefrancia_nextsj
          NEW_VERSION=${{ steps.get_version.outputs.next }}
          docker build . --file Dockerfile \
            --tag $REPO:$NEW_VERSION \
            --tag $REPO:latest
          docker push $REPO:$NEW_VERSION
          docker push $REPO:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # 1. Conectar a EC2 y desplegar la aplicación
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Actualizar el sistema y asegurarse de que Docker esté instalado
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            
            # Descargar la última imagen desde Docker Hub (usando el tag latest)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/reydefrancia_nextsj:latest

            # Detener y eliminar cualquier contenedor previo
            sudo docker ps -q --filter "name=reydefrancia" | grep -q . && \
            sudo docker stop reydefrancia && \
            sudo docker rm reydefrancia || true

            # Ejecutar el contenedor con el tag latest
            sudo docker run -d --name reydefrancia -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/reydefrancia_nextsj:latest